/**
  ******************************************************************************
	* @file   	cs43l22.h
	* @brief		Заголовочный файл с константами, описанием структур данных и прототипами функций
	*						для работы с ЦАПом CS43L22
	* @details	Содержит функцию инициализации и включения беззвучного режима
  ******************************************************************************
  */

#ifndef __CS43L22_H
#define __CS43L22_H

#include "main.h"
#include "i2c.h"
#include "i2s.h"
#include <stdbool.h>

#define CS43L22_DEV_ADDR	0x94

#define CS43L22_REG_PWR_CNTRL_1_WR_POWERED_UP	0x9E
#define CS43L22_REG_PWR_CNTRL_1_WR_POWERED_DOWN	0x01
#define CS43L22_REG_PWR_CNTRL_2_WR_HEADPHONE_A_B_OFF	0xF0
#define CS43L22_REG_PWR_CNTRL_2_WR_HEADPHONE_A_B_ON		0xA0
#define CS43L22_REG_PWR_CNTRL_2_WR_SPEAKER_A_B_OFF		0x0F
#define CS43L22_REG_PWR_CNTRL_2_WR_SPEAKER_A_B_ON		0x0A
#define CS43L22_REG_CLK_CNTRL_WR_AUTO_DETECT_SPEED	0x80
#define CS43L22_REG_CLK_CNTRL_WR_MCLK_DIVIDED_BY_2 	0x01
#define CS43L22_REG_IFACE_CNTRL_1_WR_MASTER										0x80
#define CS43L22_REG_IFACE_CNTRL_1_WR_SCLK_INVERT								0x40
#define CS43L22_REG_IFACE_CNTRL_1_WR_DSP_MODE_EN								0x10
#define CS43L22_REG_IFACE_CNTRL_1_WR_DAC_IFACE_FORMAT_I2S_UP_24B				0x04
#define CS43L22_REG_IFACE_CNTRL_1_WR_DAC_IFACE_FORMAT_RIGHT_JUSTIFIED			0x08
#define CS43L22_REG_IFACE_CNTRL_1_WR_AUDIO_WORD_LENGTH_DSP_24B_RGHT_JSTFD_20B	0x01
#define CS43L22_REG_IFACE_CNTRL_1_WR_AUDIO_WORD_LENGTH_DSP_20B_RGHT_JSTFD_18B	0x02
#define CS43L22_REG_IFACE_CNTRL_1_WR_AUDIO_WORD_LENGTH_DSP_16B_RGHT_JSTFD_16B	0x03
#define CS43L22_REG_MASTER_VOLUME_CNTRL_WR_PLUS_12DB	0x18
#define CS43L22_REG_MASTER_VOLUME_CNTRL_WR_0DB			0x00
#define CS43L22_REG_MASTER_VOLUME_CNTRL_WR_MINUS_0_5DB	0xFF
#define CS43L22_REG_MASTER_VOLUME_CNTRL_WR_MINUS_1DB	0xFE
#define CS43L22_REG_MASTER_VOLUME_CNTRL_WR_MINUS_102DB	0x34
#define CS43L22_REG_ANALOG_ZC_SR_SETTINGS_WR_NOT_OCCUR_SOFT_RAMP 	0x00
#define CS43L22_REG_ANALOG_ZC_SR_SETTINGS_WR_OCCUR_SOFT_RAMP 		0x0A
#define CS43L22_REG_ANALOG_ZC_SR_SETTINGS_WR_NOT_OCCUR_ZERO_CROSS	0x00
#define CS43L22_REG_ANALOG_ZC_SR_SETTINGS_WR_OCCUR_ZERO_CROSS		0x05
#define CS43L22_REG_MISCELLANEOUS_CNTRLS_WR_PASSTHRUB_EN		0x80
#define CS43L22_REG_MISCELLANEOUS_CNTRLS_WR_PASSTHRUA_EN		0x40
#define CS43L22_REG_MISCELLANEOUS_CNTRLS_WR_PASSBMUTE_EN		0x20
#define CS43L22_REG_MISCELLANEOUS_CNTRLS_WR_PASSAMUTE_EN		0x10
#define CS43L22_REG_MISCELLANEOUS_CNTRLS_WR_FREEZE_EN			0x08
#define CS43L22_REG_MISCELLANEOUS_CNTRLS_WR_DEEMPHASIS_EN		0x04
#define CS43L22_REG_MISCELLANEOUS_CNTRLS_WR_DIGSFT_SOFT_RAMP	0x02
#define CS43L22_REG_MISCELLANEOUS_CNTRLS_WR_DIGSFT_ZERO_CROSS	0x01
#define CS43L22_REG_LIMITER_CNTRL_1_LIMITER_OFF	0x00
#define CS43L22_REG_TONE_CNTRL_BASS_GAIN_PLUS_12DB		0x00
#define CS43L22_REG_TONE_CNTRL_BASS_GAIN_PLUS_1_5DB		0x07
#define CS43L22_REG_TONE_CNTRL_BASS_GAIN_0DB			0x08
#define CS43L22_REG_TONE_CNTRL_BASS_GAIN_MINUS_1_5DB	0x09
#define CS43L22_REG_TONE_CNTRL_BASS_GAIN_MINUS_10_5DB	0x0F
#define CS43L22_REG_VOLUME_PCM_PLUS_12DB	0x18
#define CS43L22_REG_VOLUME_PCM_PLUS_0_5DB	0x01
#define CS43L22_REG_VOLUME_PCM_PLUS_0DB		0x00
#define CS43L22_REG_VOLUME_PCM_MINUS_0_5DB	0x7F
#define CS43L22_REG_VOLUME_PCM_MINUS_51_5DB	0x19
#define CS43L22_REG_VOLUME_PCM_MUTE_EN		0x80

#define CS43L22_MUTE_OFF	0
#define CS43L22_MUTE_ON		1

//Адреса регистров
typedef enum {
	CS43L22_REG_RO_ADDR_CHIP_ID					= 0x01, ///<Регистр ID
	CS43L22_REG_ADDR_PWR_CNTRL_1 				= 0x02,	///<
	CS43L22_REG_ADDR_PWR_CNTRL_2				= 0x04,
	CS43L22_REG_ADDR_CLK_CNTRL	 				= 0x05,
	CS43L22_REG_ADDR_IFACE_CNTRL_1				= 0x06,
	CS43L22_REG_ADDR_IFACE_CNTRL_2				= 0x07,
	CS43L22_REG_ADDR_PASS_A						= 0x08,
	CS43L22_REG_ADDR_PASS_B						= 0x09,
	CS43L22_REG_ADDR_ANALOG_ZC_SR_SETTINGS		= 0x0A,
	CS43L22_REG_ADDR_PASSTHROUGH_GANG_CNTRL		= 0x0C,
	CS43L22_REG_ADDR_PLAYBACK_CNTRL_1			= 0x0D,
	CS43L22_REG_ADDR_MISCELLANEOUS_CNTRLS		= 0x0E,
	CS43L22_REG_ADDR_PLAYBACK_CNTRL_2			= 0x0F,
	CS43L22_REG_ADDR_PASS_VOLUME_A				= 0x14,
	CS43L22_REG_ADDR_PASS_VOLUME_B				= 0x15,
	CS43L22_REG_ADDR_VOLUME_PCMA				= 0x1A,
	CS43L22_REG_ADDR_VOLUME_PCMB				= 0x1B,
	CS43L22_REG_ADDR_BEEP_FREQ_AND_ON_TIME		= 0x1C,
	CS43L22_REG_ADDR_BEEP_VOLUME_AND_OFF_TIME	= 0x1D,
	CS43L22_REG_ADDR_BEEP_AND_TONE_CONFIG		= 0x1E,
	CS43L22_REG_ADDR_TONE_CNTRL					= 0x1F,
	CS43L22_REG_ADDR_MASTER_VOLUME_CNTRL_A		= 0x20,
	CS43L22_REG_ADDR_MASTER_VOLUME_CNTRL_B		= 0x21,
	CS43L22_REG_ADDR_HEADPHONE_VOLUME_CNTRL_A	= 0x22,
	CS43L22_REG_ADDR_HEADPHONE_VOLUME_CNTRL_B	= 0x23,
	CS43L22_REG_ADDR_SPEAKER_VOLUME_CNTRL_A		= 0x24,
	CS43L22_REG_ADDR_SPEAKER_VOLUME_CNTRL_B		= 0x25,
	CS43L22_REG_ADDR_PCM_CHANNEL_SWAP			= 0x26,
	CS43L22_REG_ADDR_LIMITER_CNTRL_1			= 0x27,
	CS43L22_REG_ADDR_LIMITER_CNTRL_2			= 0x28,
	CS43L22_REG_ADDR_LIMITER_ATTACK_RATE		= 0x29,
	CS43L22_REG_RO_ADDR_STATUS					= 0x2E,
	CS43L22_REG_ADDR_BATTERY_COMPENSATION		= 0x2F,
	CS43L22_REG_RO_ADDR_VP_BATTERY_LEVEL		= 0x30,
	CS43L22_REG_RO_ADDR_SPEAKER_STATUS			= 0x31,
	CS43L22_REG_ADDR_CHARGE_PUMP_FREQ			= 0x34
} CS43L22_REG_t;

///Ошибки при работе
typedef enum {
	CS43L22_ERROR_NONE,			///<Нет ошибок
	CS43L22_ERROR_I2C_READ_TX,	///<Ошибка передачи при команде чтения
	CS43L22_ERROR_I2C_READ_RX,	///<Ошибка приема при команде чтения
	CS43L22_ERROR_I2C_WRITE_TX,	///<Ошибка передачи при команде записи
} CS43L22_ERROR_t;

///Управление ножной Reset 
typedef enum {
	CS43L22_RESET,		///<К нулю			
	CS43L22_SET			///<К единице
} CS43L22_RESET_SET_t;

///Режим работы (условный параметр)
typedef enum {
	CS43L22_ANALOG_SIGNAL,	///<Аналоговый сигнал: видно на осциллографе
	CS43L22_AUDIO_SIGNAL	///<Аудиосигнал: слышно при подключении звуковоспроизводящей нагрузки
} CS43L22_PURPOSE_t;

///Струкртура с уникальным номером
typedef struct {	
	uint8_t id;		///<Индивидуальный номер
	uint8_t rev;	///<Номер ревизии
} chip;

void CS43L22_init(I2C_HandleTypeDef CS43L22_i2c_for_init, I2S_HandleTypeDef CS43L22_i2s_for_init, GPIO_TypeDef* CS43L22_reset_port_for_init, uint16_t CS43L22_reset_pin_for_init, CS43L22_PURPOSE_t purpose);
void CS43L22_mute(bool state);

#endif /* __CS43L22_H */
